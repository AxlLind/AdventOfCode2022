use itertools::Itertools;

const INPUTS: &[(usize, usize, usize)] = &[(2,4,6),(1,9,5),(3,2,4),(8,4,7),(2,9,7),(3,8,3),(2,1,2),(5,7,9),(1,9,4),(1,8,3),(1,3,4),(2,4,9),(7,3,5),(6,1,8),(11,7,9),(12,5,3),(6,6,9),(3,3,8),(4,2,7),(3,5,7),(1,5,7),(2,2,5),(1,5,2),(5,8,9),(7,7,2),(3,8,7),(1,8,9),(4,3,6),(1,5,1),(9,9,6),(7,9,6),(20,6,5),(12,9,8),(5,5,1),(3,7,4),(6,2,7),(2,3,1),(4,3,8),(1,4,1),(7,7,5),(4,8,2),(3,6,2),(3,2,9),(4,1,7),(2,1,2),(3,9,5),(11,8,5),(1,6,9),(1,8,5),(1,1,2),(24,5,4),(2,1,6),(11,5,4),(2,7,9),(1,6,2),(4,2,1),(28,4,2),(1,7,8),(9,2,5),(2,9,6),(4,4,2),(1,7,4),(3,4,7),(1,6,9),(21,2,3),(3,1,6),(5,6,2),(7,2,3),(1,9,3),(1,8,4),(1,7,8),(3,5,8),(1,1,7),(2,7,9),(2,8,4),(1,9,2),(1,8,6),(11,3,4),(1,7,8),(6,5,9),(2,8,7),(1,6,5),(7,3,8),(9,3,6),(1,8,3),(1,7,4),(2,3,5),(4,5,7),(4,6,8),(2,7,9),(11,4,2),(1,4,2),(6,8,9),(1,7,1),(1,3,7),(3,7,8),(6,8,9),(6,4,8),(18,9,3),(1,5,8),(5,6,5),(6,8,1),(3,5,4),(1,9,8),(3,4,8),(15,3,6),(2,5,9),(3,3,1),(9,6,4),(2,1,5),(2,5,8),(6,4,2),(6,1,6),(3,4,6),(6,9,1),(4,2,1),(7,8,1),(1,6,7),(17,1,5),(1,7,1),(5,2,1),(1,8,6),(11,6,4),(2,2,3),(3,1,8),(7,2,5),(4,6,7),(4,1,5),(15,5,9),(2,3,7),(2,8,2),(1,1,9),(6,2,6),(7,5,6),(5,7,3),(1,6,1),(2,3,4),(1,3,4),(5,6,4),(14,9,2),(1,8,9),(1,7,8),(1,9,6),(2,9,5),(1,1,2),(7,6,9),(1,3,4),(8,5,2),(1,6,7),(1,7,4),(1,8,4),(1,3,9),(7,9,5),(1,9,1),(6,5,1),(8,2,4),(1,5,6),(1,6,7),(1,7,9),(7,2,9),(1,9,4),(3,9,1),(1,9,6),(11,2,8),(9,1,8),(1,6,4),(1,1,9),(12,4,2),(4,9,3),(3,4,6),(9,8,6),(12,4,9),(8,6,3),(8,2,7),(11,3,4),(2,2,7),(2,6,1),(1,2,3),(2,6,2),(3,2,6),(2,1,6),(1,6,1),(1,6,4),(2,6,3),(1,6,5),(4,3,8),(12,4,5),(5,9,7),(3,8,7),(1,9,1),(3,8,2),(13,5,6),(1,2,9),(13,6,7),(7,9,6),(2,4,6),(1,8,6),(1,1,6),(1,2,9),(1,2,3),(12,7,9),(7,8,4),(1,1,3),(2,7,9),(15,7,4),(8,6,3),(1,8,9),(1,7,2),(10,3,5),(6,5,9),(1,2,8),(1,5,8),(2,8,9),(10,4,9),(20,9,6),(1,7,6),(4,9,3),(1,5,9),(4,4,9),(8,9,7),(2,5,1),(7,4,3),(8,3,2),(6,9,8),(1,3,7),(1,3,1),(7,7,8),(13,8,3),(2,2,8),(1,8,2),(1,4,1),(1,1,8),(2,8,2),(24,6,2),(2,7,8),(5,3,4),(25,2,6),(5,4,9),(2,8,7),(2,7,3),(4,6,2),(2,6,4),(9,2,3),(11,3,7),(10,7,8),(1,7,9),(3,2,4),(8,8,2),(1,2,6),(2,4,1),(1,8,2),(1,6,9),(1,8,3),(6,9,7),(2,9,1),(9,6,8),(7,2,3),(7,8,2),(10,6,8),(7,1,2),(9,3,2),(5,3,8),(4,7,2),(2,3,2),(12,2,3),(6,4,2),(1,7,6),(5,3,5),(16,8,4),(12,2,7),(5,5,7),(1,8,3),(1,6,4),(17,7,4),(1,7,1),(1,1,9),(1,9,5),(11,4,9),(10,2,3),(1,5,4),(1,9,2),(2,2,1),(1,2,3),(23,4,5),(7,9,7),(3,9,1),(20,5,6),(3,5,8),(1,4,1),(2,8,3),(4,6,4),(7,7,2),(1,8,4),(19,3,9),(5,1,7),(7,2,6),(3,7,5),(2,3,4),(1,5,4),(1,1,4),(1,7,6),(13,6,7),(6,9,3),(1,3,5),(2,3,4),(2,6,2),(3,4,3),(8,9,1),(2,2,1),(8,6,7),(2,9,4),(20,7,1),(2,7,5),(2,5,1),(8,1,8),(8,8,6),(1,6,9),(8,6,1),(1,5,3),(7,3,2),(1,5,2),(2,9,7),(1,5,8),(18,1,4),(1,8,9),(3,2,3),(2,7,4),(5,2,4),(3,3,8),(8,1,7),(2,9,2),(32,4,5),(1,9,7),(1,2,1),(6,1,6),(1,2,4),(3,8,1),(3,6,5),(1,3,6),(2,1,9),(4,4,7),(31,5,4),(4,5,6),(1,6,1),(7,6,5),(1,9,4),(19,4,2),(1,5,9),(5,5,6),(3,4,2),(2,7,1),(4,7,8),(3,8,6),(2,6,7),(6,7,8),(3,1,5),(4,5,9),(15,2,1),(4,6,4),(2,6,3),(1,3,7),(4,1,2),(1,3,4),(2,7,4),(5,9,3),(2,7,3),(16,4,8),(8,8,5),(2,1,5),(1,9,6),(1,6,5),(7,5,9),(3,1,8),(1,8,4),(8,2,7),(3,1,3),(1,3,9),(2,4,2),(7,8,5),(7,9,1),(6,3,5),(6,7,4),(3,4,1),(3,2,5),(1,7,8),(1,7,5),(1,9,8),(2,2,4),(15,1,6),(8,5,9),(3,3,4),(4,4,3),(1,9,7),(6,9,4),(1,9,2),(6,4,9),(2,4,6),(5,6,9),(1,3,1),(8,6,8),(12,5,3),(1,5,3),(1,3,8),(4,6,1),(11,3,8),(1,2,1),(23,8,2),(3,1,2),(1,1,9),(2,2,3),(6,3,6),(1,7,6),(1,4,7),(1,4,3),(1,7,3),(4,8,4),(2,1,8),(3,8,1),(4,6,2),(7,9,1),(1,9,6),(2,2,3),(3,9,4),(1,9,3),(10,2,8),(16,2,5),(2,3,6),(6,1,8),(1,1,5),(8,8,5),(11,5,9),(2,1,8),(1,1,8),(4,4,6),(3,3,9),(14,9,3),(15,8,5),(9,5,4),(7,6,1),(1,6,3),(4,4,7),(2,6,2),(4,7,4),(4,1,4),(10,4,3),(14,3,6),(5,4,1),(6,5,7),(1,2,6),(3,7,2),(2,2,3),(3,7,8),(2,8,2),(2,2,7),(6,6,2),(1,8,7),(8,2,7),(1,4,1),(5,5,3),(3,3,2),(5,1,3),(7,5,8),(6,6,3),(1,5,9),(10,7,9),(26,3,4),(1,5,1),(6,8,2),(9,2,9),(1,7,5),(1,8,5),(2,6,2),(20,9,6),(1,1,6),(1,4,2),(1,5,8),(1,5,7),(3,1,3),(1,3,6),(12,4,8),(11,4,5),(1,7,5),(1,2,8),(1,1,8),(2,2,5),(8,6,2),(5,6,4),(2,5,3),(12,8,4),(5,2,6),(3,8,1),(11,6,8),(10,4,6),(5,4,6),(12,6,5),(22,5,6),(3,6,5),(3,8,5),(1,3,8),(4,8,1),(6,1,7),(5,6,9)];

fn part_one(stacks: &mut [Vec<char>]) -> String {
  for &(times,from,to) in INPUTS {
    for _ in 0..times {
      let item = stacks[from-1].pop().unwrap();
      stacks[to-1].push(item);
    }
  }
  stacks.iter().map(|s| *s.last().unwrap()).join("")
}

fn part_two(stacks: &mut [Vec<char>]) -> String {
  for &(times,from,to) in INPUTS {
    for _ in 0..times {
      stacks[to-1].push('x');
    }
    let len = stacks[to-1].len();
    for i in 0..times {
      let item = stacks[from-1].pop().unwrap();
      stacks[to-1][len - 1 - i] = item;
    }
  }
  stacks.iter().map(|s| *s.last().unwrap()).join("")
}

#[aoc::main(05)]
fn main(_: &str) -> (String, String) {
  let mut stacks = [
    vec!['J','Z','G','V','T','D','B','N'],
    vec!['F','P','W','D','M','R','S'],
    vec!['Z','S','R','C','V'],
    vec!['G','H','P','Z','J','T','R'],
    vec!['F','Q','Z','D','N','J','C','T'],
    vec!['M','F','S','G','W','P','V','N'],
    vec!['Q','P','B','V','C','G'],
    vec!['N','P','B','Z'],
    vec!['J','P','W'],
  ];
  for x in &mut stacks {
    x.reverse();
  }
  let p1 = part_one(&mut stacks.clone());
  let p2 = part_two(&mut stacks);
  (p1,p2)
}
